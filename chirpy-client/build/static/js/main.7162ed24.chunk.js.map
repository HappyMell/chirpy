{"version":3,"sources":["redux/reducers/dataReducer.js","redux/reducers/userReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/types.js","redux/actions/userActions.js","util/MyButton.js","redux/actions/dataActions.js","components/Chirp/PostChirp.js","components/Layout/Notifications.js","components/Layout/Navbar.js","util/AuthRoute.js","components/Chirp/DeleteChirp.js","components/Chirp/LikeButton.js","components/Chirp/Comments.js","components/Chirp/CommentForm.js","components/Chirp/ChirpDialog.js","components/Chirp/Chirp.js","components/Profile/EditDetails.js","util/ProfileSkeleton.js","components/Profile/Profile.js","util/ChirpSkeleton.js","pages/home.js","pages/login.js","pages/signup.js","components/Profile/StaticProfile.js","pages/user.js","App.js","util/theme.js","serviceWorker.js","index.js","images/no-img.png","images/bird.svg"],"names":["index","initialState","authenticated","credentials","likes","loading","notifications","chirps","chirp","errors","middleware","thunk","reducers","combineReducers","user","state","arguments","length","undefined","action","type","Object","objectSpread","payload","concat","toConsumableArray","userhandle","handle","chirpId","filter","like","forEach","not","read","data","findIndex","temp","comments","splice","UI","store","createStore","applyMiddleware","apply","logoutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","getUserData","get","then","res","catch","err","console","log","setAuthorizationHeader","token","FBIdToken","setItem","MyButton","_ref","children","onClick","tip","btnClassName","tipClassName","react_default","a","createElement","Tooltip","title","className","placement","IconButton","clearErrors","PostChirp","open","body","handleOpen","_this","setState","handleClose","props","handleChange","e","defineProperty","target","name","value","handleSubmit","preventDefault","postChirp","nextProps","this","_this$props","classes","react","Add_default","Dialog","onClose","fullWidth","maxWidth","closeButton","Close_default","DialogTitle","DialogContent","onSubmit","TextField","label","multiline","rows","placeholder","error","helperText","textField","onChange","Button","variant","color","submitButton","disabled","CircularProgress","size","progressSpinner","Component","connect","newChirp","post","response","withStyles","theme","otherPages","Notifications","anchorEl","onMenuOpened","unreadNotificationsIds","map","notificationId","markNotificationsRead","notificationsIcon","_this2","dayjs","extend","relativeTime","Badge","badgeContent","Notifications_default","notificationsMarkup","verb","time","createdAt","fromNow","iconColor","icon","Favorite_default","style","marginRight","Chat_default","MenuItem","key","Typography","component","Link","to","recipient","sender","aria-owns","aria-haspopup","Menu","Boolean","onEntered","poprTypes","PropTypes","func","isRequired","array","notificationIds","Navbar","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","AppBar","Toolbar","Chirp_PostChirp","react_router_dom","Home_default","Layout_Notifications","rest","objectWithoutProperties","react_router","assign","render","DeleteChirp","deleteChirp","deleteButton","DeleteOutline_default","DialogActions","delete","position","left","top","LikeButton","_getPrototypeOf2","_len","args","Array","_key","call","likedChirp","find","likeChirp","unlikeChirp","FavoriteBorder_default","mapActionsToProps","Comments","Grid","container","comment","userImage","userHandle","item","sm","src","alt","commentImage","commentData","format","invisibleSeparator","variabnt","visibleSeparator","height","objectFit","borderRadius","marginLeft","CommentForm","submitComment","textAlign","button","ChirpDialog","oldPath","newPath","window","location","pathname","history","pushState","getChirp","openDialog","_this$props2","_this$props2$chirp","likeCount","commentCount","dialogMarkup","spinnerDiv","thickness","spacing","xs","profileImage","Chirp_LikeButton","Chirp_CommentForm","Chirp_Comments","expandButton","dialogContent","Chirp","_this$props$chirp","_this$props$user","Chirp_DeleteChirp","Card","card","CardMedia","image","CardContent","content","Hidden","only","Chirp_ChirpDialog","display","marginBottom","minWidth","padding","EditDetails","bio","website","mapUserDetailsToState","userDetails","editUserDetails","Edit_default","float","backgroundColor","palette","primary","main","width","margin","fullLine","halfLine","Paper","paper","profile","NoImg","LocationOn_default","Link_default","CalendarToday_default","Profile","handleImageChange","files","formData","FormData","append","uploadImage","handleEditPicture","document","getElementById","click","handleLogout","_this$props$user$cred","imageUrl","util_ProfileSkeleton","id","hidden","Link_Link","href","rel","KeyboardReturn_default","Profile_EditDetails","align","buttons","cardContent","flexDirection","cover","date","from","Home","getChirps","_this$props$data","recentChirpsMarkup","util_ChirpSkeleton","components_Chirp_Chirp","components_Profile_Profile","Login","userData","email","password","loginUser","form","AppIcon","pageTitle","noValidate","general","customError","progress","push","Signup","newUserData","confirmPassword","signupUser","& a","_props$profile","User","chirpIdParam","match","params","chirpsMarkup","Profile_StaticProfile","createMuiTheme","light","dark","contrastText","secondary","marginTop","fontSize","typography","useNextVariants","& .image-wrapper","& button","& .profile-image","& .profile-details","& span, svg","verticalAlign","& hr","border","& svg.button","&:hover","cursor","borderBottom","baseURL","jwtDecode","exp","Date","now","App","MuiThemeProvider_default","es","Layout_Navbar","exact","path","util_AuthRoute","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7162ed24.chunk.js","sourcesContent":["import { SET_CHIRPS, LIKE_CHIRP, UNLIKE_CHIRP, LOADING_DATA, DELETE_CHIRP, POST_CHIRP, SET_CHIRP, SUBMIT_COMMENT } from '../types';\r\n\r\nconst initialState = {\r\n    chirps: [],\r\n    chirp: {},\r\n    loading: false\r\n};\r\n\r\nlet index;\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case SET_CHIRPS:\r\n            return {\r\n                ...state,\r\n                chirps: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_CHIRP:\r\n            return {\r\n                ...state,\r\n                chirp: action.payload\r\n            }\r\n        case LIKE_CHIRP:\r\n        case UNLIKE_CHIRP:\r\n            index = state.chirps.findIndex(\r\n                (chirp) => chirp.chirpId === action.payload.chirpId\r\n            );\r\n            state.chirps[index] = action.payload;\r\n            if (state.chirp.chirpId === action.payload.chirpId) {\r\n                let temp = state.chirp.comments;\r\n                state.chirp = action.payload;\r\n                state.chirp.comments = temp\r\n            }\r\n            return {\r\n                ...state\r\n            };\r\n        case DELETE_CHIRP:\r\n            index = state.chirps.findIndex((chirp) => chirp.chirpId === action.payload);\r\n            state.chirps.splice(index, 1);\r\n            return {\r\n                ...state\r\n            };\r\n        case POST_CHIRP:\r\n            return {\r\n                ...state,\r\n                chirps: [\r\n                    action.payload,\r\n                    ...state.chirps\r\n                ]\r\n            }\r\n        case SUBMIT_COMMENT:\r\n            return {\r\n                ...state,\r\n                chirp: {\r\n                    ...state.chirp,\r\n                    comments: [action.payload, ...state.chirp.comments]\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER, LIKE_CHIRP, UNLIKE_CHIRP, MARK_NOTIFICATIONS_READ } from '../types';\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    credentials: {},\r\n    likes: [],\r\n    loading: false,\r\n    notifications: []\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true\r\n            };\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState;\r\n        case SET_USER:\r\n            return {\r\n                authenticated: true,\r\n                loading: false,\r\n                ...action.payload\r\n            };\r\n        case LOADING_USER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LIKE_CHIRP:\r\n            return {\r\n                ...state,\r\n                likes: [\r\n                    ...state.likes,\r\n                    {\r\n                        userhandle: state.credentials.handle,\r\n                        chirpId: action.payload.chirpId\r\n                    }\r\n                ]\r\n            }\r\n        case UNLIKE_CHIRP:\r\n            return {\r\n                ...state,\r\n                likes: state.likes.filter(like => like.chirpId !== action.payload.chirpId)\r\n            }\r\n        case MARK_NOTIFICATIONS_READ:\r\n            state.notifications.forEach(not => not.read = true);\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI } from '../types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: null\r\n            };\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case STOP_LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer\r\n});\r\n\r\nconst store = createStore(reducers, initialState, applyMiddleware(...middleware))\r\n\r\n//window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nexport default store","//User Reducer Types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ';\r\n//UI Reducer Types\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\r\n\r\n\r\n//Data Reducer Types\r\nexport const SET_CHIRPS = 'SET_CHIRPS';\r\nexport const SET_CHIRP = 'SET_CHIRP';\r\nexport const LIKE_CHIRP = 'LIKE_CHIRP';\r\nexport const UNLIKE_CHIRP = 'UNLIKE_CHIRP';\r\nexport const DELETE_CHIRP = 'DELETE_CHIRP';\r\nexport const POST_CHIRP = 'POST_CHIRP';\r\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';\r\n\r\n","import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER, MARK_NOTIFICATIONS_READ } from '../types';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (userData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post('/login', userData)\r\n        .then(res => {\r\n            setAuthorizationHeader(res.data.token)\r\n            dispatch(getUserData());\r\n            dispatch({ type: CLEAR_ERRORS });\r\n            history.push('/');\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        })\r\n}\r\n\r\nexport const signupUser = (newUserData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios\r\n        .post('/signup', newUserData)\r\n        .then(res => {\r\n            setAuthorizationHeader(res.data.token)\r\n            dispatch(getUserData());\r\n            dispatch({ type: CLEAR_ERRORS });\r\n            history.push('/');\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        })\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    localStorage.removeItem('FBIdToken');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    dispatch({ type: SET_UNAUTHENTICATED });\r\n}\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.get('/user')\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_USER,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const uploadImage = (formData) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.post('/user/image', formData)\r\n        .then(() => {\r\n            dispatch(getUserData());\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const editUserDetails = (userDetails) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.post('/user', userDetails)\r\n        .then(() => {\r\n            dispatch(getUserData());\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const markNotificationsRead = (notificationIds) => dispatch => {\r\n    axios\r\n        .post('/notifications', notificationIds)\r\n        .then(res => {\r\n            dispatch({ type: MARK_NOTIFICATIONS_READ })\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nconst setAuthorizationHeader = (token) => {\r\n    const FBIdToken = `Bearer ${token}`\r\n    localStorage.setItem('FBIdToken', FBIdToken)\r\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\r\n}","import React from 'react'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButtom from '@material-ui/core/IconButton';\r\n\r\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => (\r\n    <Tooltip title={tip} className={tipClassName} placement=\"top\">\r\n        <IconButtom onClick={onClick} className={btnClassName}>\r\n            {children}\r\n        </IconButtom>\r\n    </Tooltip>\r\n)\r\n\r\n\r\n","import { SET_CHIRPS, LOADING_DATA, LIKE_CHIRP, UNLIKE_CHIRP, DELETE_CHIRP, LOADING_UI, SET_ERRORS, CLEAR_ERRORS, POST_CHIRP, STOP_LOADING_UI, SET_CHIRP, SUBMIT_COMMENT } from '../types';\r\nimport axios from 'axios';\r\n\r\n\r\n//Get all chirps\r\nexport const getChirps = () => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get('/chirps')\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_CHIRPS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_CHIRPS,\r\n                payload: []\r\n            })\r\n        })\r\n}\r\n\r\n//Get one chirp\r\nexport const getChirp = (chirpId) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.get(`/chirp/${chirpId}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_CHIRP,\r\n                payload: res.data\r\n            })\r\n            dispatch({ type: STOP_LOADING_UI })\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\n//Post a Chirp\r\nexport const postChirp = (newChirp) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post('/chirp', newChirp)\r\n        .then(res => {\r\n            dispatch({\r\n                type: POST_CHIRP,\r\n                payload: res.data\r\n            })\r\n            dispatch(clearErrors())\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        })\r\n}\r\n\r\n//Like a chirp\r\nexport const likeChirp = (chirpId) => (dispatch) => {\r\n    axios\r\n        .get(`/chirp/${chirpId}/like`)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: LIKE_CHIRP,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\n//Unlike a chirp\r\nexport const unlikeChirp = (chirpId) => (dispatch) => {\r\n    axios\r\n        .get(`/chirp/${chirpId}/unlike`)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UNLIKE_CHIRP,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\n//Submit a comment\r\n\r\nexport const submitComment = (chirpId, commentData) => (dispatch) => {\r\n    axios\r\n        .post(`/chirp/${chirpId}/comment`, commentData)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: SUBMIT_COMMENT,\r\n                payload: res.data\r\n            });\r\n            dispatch(clearErrors());\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        });\r\n};\r\n\r\n//Delete a chirp\r\nexport const deleteChirp = (chirpId) => (dispatch) => {\r\n    axios\r\n        .delete(`/chirp/${chirpId}`)\r\n        .then(() => {\r\n            dispatch({ type: DELETE_CHIRP, payload: chirpId });\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\n//Get user data\r\nexport const getUserData = (userHandle) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios\r\n        .get(`/user/${userHandle}`)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: SET_CHIRPS,\r\n                payload: res.data.chirps\r\n            });\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: SET_CHIRPS,\r\n                payload: null\r\n            });\r\n        });\r\n};\r\n\r\n//Clear Errors\r\nexport const clearErrors = () => (dispatch) => {\r\n    dispatch({ type: CLEAR_ERRORS })\r\n}","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\n\r\n//MUI\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n//Icons\r\n//import EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { postChirp, clearErrors } from '../../redux/actions/dataActions';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.otherPages,\r\n})\r\n\r\n\r\n\r\n\r\nclass PostChirp extends Component {\r\n    state = {\r\n        open: false,\r\n        body: '',\r\n        errors: {}\r\n    };\r\n\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({\r\n                errors: nextProps.UI.errors\r\n            })\r\n        };\r\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n            this.setState({\r\n                body: '',\r\n                open: false,\r\n                errors: {}\r\n            })\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearErrors()\r\n        this.setState({\r\n            open: false,\r\n            errors: {}\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.postChirp({ body: this.state.body })\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        const { classes, UI: { loading } } = this.props;\r\n\r\n\r\n        return (\r\n            <Fragment>\r\n                <MyButton onClick={this.handleOpen} tip=\"Post a Chirp!\">\r\n                    <AddIcon />\r\n                </MyButton>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth=\"xs\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon />\r\n                    </MyButton>\r\n                    <DialogTitle>Post a new Chirp</DialogTitle>\r\n                    <DialogContent>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <TextField\r\n                                name=\"body\"\r\n                                type=\"text\"\r\n                                label=\"Chirp!\"\r\n                                multiline\r\n                                rows=\"1\"\r\n                                placeholder=\"Send a Chirp!\"\r\n                                error={errors.body ? true : false}\r\n                                helperText={errors.body}\r\n                                className={classes.textField}\r\n                                onChange={this.handleChange}\r\n                                fullWidth />\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submitButton} disabled={loading}>\r\n                                Submit\r\n                                {loading && (\r\n                                    <CircularProgress size={30} className={classes.progressSpinner} />\r\n                                )}\r\n                            </Button>\r\n                        </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nPostChirp.propTypes = {\r\n    postChirp: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, { postChirp, clearErrors })(withStyles(styles)(PostChirp));","import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport PropTypes from 'prop-types';\r\n\r\n//MUI\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\n\r\n//Icons\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { markNotificationsRead } from '../../redux/actions/userActions';\r\n\r\nclass Notifications extends Component {\r\n    state = {\r\n        anchorEl: null\r\n    }\r\n\r\n    handleOpen = (e) => {\r\n        this.setState({\r\n            anchorEl: e.target\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            anchorEl: null\r\n        })\r\n    }\r\n\r\n    onMenuOpened = () => {\r\n        let unreadNotificationsIds = this.props.notifications\r\n            .filter(not => !not.read)\r\n            .map(not => not.notificationId);\r\n\r\n        this.props.markNotificationsRead(unreadNotificationsIds)\r\n    }\r\n\r\n    render() {\r\n        const notifications = this.props.notifications;\r\n        const anchorEl = this.state.anchorEl;\r\n\r\n        dayjs.extend(relativeTime);\r\n\r\n        let notificationsIcon;\r\n        if (notifications && notifications.length > 0) {\r\n            notifications.filter(not => not.read === false).length > 0\r\n                ? notificationsIcon = (\r\n                    <Badge badgeContent={notifications.filter(not => not.read === false).length}\r\n                        color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                ) : (\r\n                    notificationsIcon = <NotificationsIcon />\r\n                )\r\n        } else {\r\n            notificationsIcon = <NotificationsIcon />\r\n        }\r\n        let notificationsMarkup = notifications && notifications.length > 0 ? (\r\n            notifications.map(not => {\r\n                const verb = not.type === 'like' ? 'liked' : 'commented on';\r\n                const time = dayjs(not.createdAt).fromNow();\r\n                const iconColor = not.read ? 'primary' : 'secondary';\r\n                const icon = not.type === 'like' ? (\r\n                    <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} />\r\n                ) : (\r\n                        <ChatIcon color={iconColor} style={{ marginRight: 10 }} />\r\n                    )\r\n                return (\r\n                    <MenuItem key={not.createdAt} onClick={this.handleClose}>\r\n                        {icon}\r\n                        <Typography\r\n                            component={Link}\r\n                            color=\"default\"\r\n                            variant=\"body1\"\r\n                            to={`/users/${not.recipient}/chirp/${not.chirpId}`}\r\n                        >\r\n                            {not.sender} {verb} your Chirp {time}\r\n                        </Typography>\r\n                    </MenuItem>\r\n                )\r\n            })\r\n        ) : (\r\n                <MenuItem onClick={this.handleClose}>\r\n                    You have no notifications yet\r\n            </MenuItem>\r\n            )\r\n        return (\r\n            <Fragment>\r\n                <Tooltip placement=\"top\" title=\"Notifications\">\r\n                    <IconButton aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                        aria-haspopup=\"true\" onClick={this.handleOpen}>\r\n                        {notificationsIcon}\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleClose}\r\n                    onEntered={this.onMenuOpened}\r\n                >\r\n                    {notificationsMarkup}\r\n                </Menu>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nNotifications.poprTypes = {\r\n    markNotificationsRead: PropTypes.func.isRequired,\r\n    notifications: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    notifications: state.user.notifications\r\n})\r\n\r\nexport default connect(mapStateToProps, { markNotificationsRead })(Notifications)","import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\nimport PostChirp from '../Chirp/PostChirp';\r\nimport Notifications from './Notifications';\r\n//MUI\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n//Icons\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nexport class Navbar extends Component {\r\n    render() {\r\n        const { authenticated } = this.props\r\n        return (\r\n            <AppBar>\r\n                <Toolbar className='nav-container'>\r\n                    {authenticated ? (\r\n                        <Fragment>\r\n                            <PostChirp />\r\n                            <Link to='/'>\r\n                                <MyButton tip=\"Home\">\r\n                                    <HomeIcon />\r\n\r\n                                </MyButton>\r\n                            </Link>\r\n\r\n                            <Notifications />\r\n\r\n\r\n                        </Fragment>\r\n                    ) : (\r\n                            <Fragment>\r\n                                <Button color='inherit' component={Link} to='/login'>Login</Button>\r\n                                <Button color='inherit' component={Link} to='/'>Home</Button>\r\n                                <Button color='inherit' component={Link} to='/signup'>Sign Up</Button>\r\n                            </Fragment>\r\n                        )}\r\n\r\n                </Toolbar>\r\n            </AppBar >\r\n        )\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    authenticated: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) => authenticated === true ? <Redirect to='/' /> : <Component {...props} />}\r\n    />\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nAuthRoute.propTypes = {\r\n    user: PropTypes.object\r\n}\r\n\r\nexport default connect(mapStateToProps)(AuthRoute)","import React, { Component, Fragment } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\n\r\n\r\n//MUI\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { deleteChirp } from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    deleteButton: {\r\n        position: 'absolute',\r\n        left: '90%',\r\n        top: '10%'\r\n    }\r\n}\r\n\r\nclass DeleteChirp extends Component {\r\n    state = {\r\n        open: false\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    }\r\n\r\n    deleteChirp = () => {\r\n        this.props.deleteChirp(this.props.chirpId)\r\n        this.setState({\r\n            open: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <MyButton tip=\"Delete Chirp\"\r\n                    onClick={this.handleOpen}\r\n                    btnClassName={classes.deleteButton}\r\n                >\r\n                    <DeleteOutline color=\"secondary\" />\r\n                </MyButton>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth=\"sm\"\r\n                >\r\n                    <DialogTitle>\r\n                        Are you sure you want to delete this Chirp?\r\n                </DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                    </Button>\r\n                        <Button onClick={this.deleteChirp} color=\"secondary\">\r\n                            Delete\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nDeleteChirp.propTypes = {\r\n    deleteChirp: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    chirpId: PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteChirp })(withStyles(styles)(DeleteChirp));\r\n","import React, { Component } from 'react'\r\nimport MyButton from '../../util/MyButton';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n//Icons\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { likeChirp, unlikeChirp } from '../../redux/actions/dataActions';\r\n\r\nexport class LikeButton extends Component {\r\n    likedChirp = () => {\r\n        if (\r\n            this.props.user.likes &&\r\n            this.props.user.likes.find(\r\n                (like) => like.chirpId === this.props.chirpId\r\n            )\r\n        )\r\n            return true;\r\n        else return false;\r\n    };\r\n    likeChirp = () => {\r\n        this.props.likeChirp(this.props.chirpId);\r\n    };\r\n    unlikeChirp = () => {\r\n        this.props.unlikeChirp(this.props.chirpId);\r\n    };\r\n    render() {\r\n        const { authenticated } = this.props.user;\r\n        const likeButton = !authenticated ? (\r\n            <Link to=\"/login\">\r\n                <MyButton tip=\"Like\">\r\n                    <FavoriteBorder color=\"primary\" />\r\n                </MyButton>\r\n            </Link>\r\n        ) : this.likedChirp() ? (\r\n            <MyButton tip=\"Undo like\" onClick={this.unlikeChirp}>\r\n                <FavoriteIcon color=\"primary\" />\r\n            </MyButton>\r\n        ) : (\r\n                    <MyButton tip=\"Like\" onClick={this.likeChirp}>\r\n                        <FavoriteBorder color=\"primary\" />\r\n                    </MyButton>\r\n                );\r\n        return likeButton;\r\n    }\r\n}\r\n\r\nLikeButton.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    chirpId: PropTypes.string.isRequired,\r\n    likeChirp: PropTypes.func.isRequired,\r\n    unlikeChirp: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    likeChirp,\r\n    unlikeChirp\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton)\r\n","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\n//MUI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    ...theme.otherPages,\r\n    commentImage: {\r\n        maxWidth: '100%',\r\n        height: 100,\r\n        objectFit: 'cover',\r\n        borderRadius: '50%'\r\n    },\r\n    commentData: {\r\n        marginLeft: 20\r\n    }\r\n})\r\n\r\nclass Comments extends Component {\r\n    render() {\r\n        const { comments, classes } = this.props;\r\n\r\n        return (\r\n            <Grid container>\r\n                {comments.map((comment, index) => {\r\n                    const { body, createdAt, userImage, userHandle } = comment;\r\n                    return (\r\n                        <Fragment key={createdAt}>\r\n                            <Grid item sm={12}>\r\n                                <Grid container>\r\n                                    <Grid item sm={2}>\r\n                                        <img\r\n                                            src={userImage}\r\n                                            alt=\"comment\"\r\n                                            className={classes.commentImage}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item sm={9}>\r\n                                        <div className={classes.commentData}>\r\n                                            <Typography\r\n                                                variant=\"h5\"\r\n                                                component={Link}\r\n                                                to={`/users/${userHandle}`}\r\n                                                color=\"primary\"\r\n                                            >\r\n                                                {userHandle}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                                            </Typography>\r\n                                            <hr className={classes.invisibleSeparator} />\r\n                                            <Typography variabnt=\"body1\">{body}</Typography>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {index !== comments.length - 1 && (\r\n                                <hr className={classes.visibleSeparator} />\r\n                            )}\r\n                        </Fragment>\r\n                    );\r\n                })}\r\n            </Grid>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nComments.propTypes = {\r\n    comments: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Comments);","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\n//MUI\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { submitComment } from '../../redux/actions/dataActions';\r\n\r\nconst styles = theme => ({\r\n    ...theme.otherPages\r\n})\r\n\r\nclass CommentForm extends Component {\r\n    state = {\r\n        body: '',\r\n        errors: {}\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({ errors: nextProps.UI.errors });\r\n        }\r\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n            this.setState({\r\n                body: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.submitComment(this.props.chirpId, { body: this.state.body });\r\n    }\r\n\r\n    render() {\r\n        const { classes, authenticated } = this.props;\r\n        const errors = this.state.errors;\r\n        const commentFormMarkup = authenticated ? (\r\n            <Grid item sm={12} style={{ textAlign: 'center' }}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField\r\n                        name=\"body\"\r\n                        type=\"text\"\r\n                        label=\"Comment on Chirp\"\r\n                        error={errors.comment ? true : false}\r\n                        helperText={errors.comment}\r\n                        value={this.state.body}\r\n                        onChange={this.handleChange}\r\n                        fullWidth\r\n                        className={classes.textField}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                    >Submit</Button>\r\n                </form>\r\n\r\n            </Grid>\r\n        ) : null\r\n\r\n        return commentFormMarkup\r\n    }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    submitComment: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    chirpId: PropTypes.string.isRequired,\r\n    authenticated: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    UI: state.UI,\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { submitComment })(withStyles(styles)(CommentForm));\r\n","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\nimport dayjs from 'dayjs';\r\nimport { Link } from 'react-router-dom';\r\nimport LikeButton from './LikeButton';\r\nimport Comments from './Comments';\r\nimport CommentForm from './CommentForm';\r\n\r\n\r\n//MUI\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//Icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { getChirp, clearErrors } from '../../redux/actions/dataActions';\r\n\r\nconst styles = theme => ({\r\n    ...theme.otherPages\r\n\r\n\r\n})\r\n\r\nclass ChirpDialog extends Component {\r\n    state = {\r\n        open: false,\r\n        oldPath: '',\r\n        newPath: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.openDialog) {\r\n            this.handleOpen();\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        let oldPath = window.location.pathname;\r\n\r\n        const { userHandle, chirpId } = this.props;\r\n        const newPath = `/users/${userHandle}/chirp/${chirpId}`;\r\n\r\n        if (oldPath === newPath) {\r\n            oldPath = `/users/${userHandle}`;\r\n        }\r\n\r\n        window.history.pushState(null, null, newPath);\r\n\r\n        this.setState({ open: true, oldPath, newPath });\r\n        this.props.getChirp(this.props.chirpId)\r\n    }\r\n\r\n    handleClose = () => {\r\n        window.history.pushState(null, null, this.state.oldPath);\r\n\r\n        this.setState({ open: false })\r\n        this.props.clearErrors()\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            chirp: { chirpId, body, createdAt, likeCount, commentCount, userImage, comments, userHandle }, UI: { loading } } = this.props\r\n        const dialogMarkup = loading ? (\r\n            <div className={classes.spinnerDiv}>\r\n                <CircularProgress size={200} thickness={2} />\r\n            </div>\r\n        ) : (\r\n                <Grid container spacing={2}  >\r\n                    <Grid item sm={5} xs={3} >\r\n                        <img src={userImage} alt=\"Profile\" xs={5} className={classes.profileImage} />\r\n                    </Grid>\r\n                    <Grid item sm={7}>\r\n                        <Typography component={Link} color=\"primary\" variant=\"h5\" to={`/users/${userHandle}`} >\r\n                            @{userHandle}\r\n                        </Typography>\r\n                        <hr className={classes.invisibleSeparator} />\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                            {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                        </Typography>\r\n                        <hr className={classes.invisibleSeparator} />\r\n                        <Typography variant=\"body1\">\r\n                            {body}\r\n                        </Typography>\r\n                        <LikeButton chirpId={chirpId} />\r\n                        <span>{likeCount} Likes</span>\r\n                        <MyButton tip=\"comments\">\r\n                            <ChatIcon color=\"primary\" />\r\n                        </MyButton>\r\n                        <span>{commentCount} Comments</span>\r\n                    </Grid>\r\n                    <hr className={classes.visibleSeparator} />\r\n                    <CommentForm chirpId={chirpId} />\r\n                    <Comments comments={comments} />\r\n\r\n                </Grid>\r\n            )\r\n        return (\r\n            <Fragment>\r\n                <MyButton onClick={this.handleOpen} tip=\"Comments\" tipClassName={classes.expandButton}>\r\n                    <ChatIcon color=\"primary\" />\r\n                </MyButton>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon />\r\n                    </MyButton>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nChirpDialog.propTypes = {\r\n    clearErrors: PropTypes.func.isRequired,\r\n    getChirp: PropTypes.func.isRequired,\r\n    chirpId: PropTypes.string.isRequired,\r\n    userHandle: PropTypes.string.isRequired,\r\n    chirp: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    chirp: state.data.chirp,\r\n    UI: state.UI\r\n})\r\n\r\nconst mapActionsToProps = {\r\n    getChirp,\r\n    clearErrors\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ChirpDialog))","import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport PropTypes from 'prop-types';\r\nimport DeleteChirp from './DeleteChirp';\r\nimport ChirpDialog from './ChirpDialog';\r\n\r\n\r\n//MUI Cards\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport LikeButton from './LikeButton';\r\n\r\n\r\nconst styles = theme => ({\r\n    ...theme.otherPages,\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: 20,\r\n    },\r\n    image: {\r\n        minWidth: 151,\r\n    },\r\n    content: {\r\n        padding: 17,\r\n        objectFit: 'cover'\r\n    }\r\n})\r\n\r\nclass Chirp extends Component {\r\n\r\n\r\n    render() {\r\n        dayjs.extend(relativeTime);\r\n\r\n        const { classes, chirp: { body, createdAt, userImage, userHandle, chirpId, likeCount, commentCount }, user: { authenticated, credentials: { handle } } } = this.props\r\n\r\n\r\n        const deleteButton = authenticated && userHandle === handle ? (\r\n            <DeleteChirp chirpId={chirpId} />\r\n        ) : null\r\n\r\n\r\n        return (\r\n            <Card className={classes.card}>\r\n                <CardMedia\r\n                    maxWidth=\"sm\"\r\n                    image={userImage}\r\n                    title='Profile Image'\r\n                    className={classes.image} />\r\n                <CardContent className={classes.content}>\r\n                    <Typography variant='h5' color='primary' component={Link} to={`/users/${userHandle}`}>{userHandle}</Typography>\r\n                    {deleteButton}\r\n                    <Typography variant='body2' color='textSecondary'>{dayjs(createdAt).fromNow()}</Typography>\r\n                    <Typography variant='body1'>{body}</Typography>\r\n                    <LikeButton chirpId={chirpId} />\r\n                    <span>{likeCount}  <Hidden only=\"xs\"> Likes</Hidden></span>\r\n\r\n                    <ChirpDialog chirpId={chirpId} userHandle={userHandle} openDialog={this.props.openDialog} />\r\n\r\n                    <span >{commentCount}<Hidden only=\"xs\"> Comments</Hidden></span>\r\n\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nChirp.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    chirp: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    openDialog: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Chirp))\r\n","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { editUserDetails } from '../../redux/actions/userActions';\r\nimport MyButton from '../../util/MyButton';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n//MUI\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//Icons\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.otherPages,\r\n    button: {\r\n        float: 'right'\r\n    }\r\n})\r\n\r\nclass EditDetails extends Component {\r\n    state = {\r\n        bio: '',\r\n        website: '',\r\n        location: '',\r\n        open: false\r\n    };\r\n\r\n    mapUserDetailsToState = (credentials) => {\r\n        this.setState({\r\n            bio: credentials.bio ? credentials.bio : '',\r\n            website: credentials.website ? credentials.website : '',\r\n            location: credentials.location ? credentials.location : ''\r\n\r\n        });\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        })\r\n        this.mapUserDetailsToState(this.props.credentials)\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const userDetails = {\r\n            bio: this.state.bio,\r\n            website: this.state.website,\r\n            location: this.state.location\r\n        };\r\n        this.props.editUserDetails(userDetails);\r\n        this.handleClose();\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { credentials } = this.props;\r\n        this.mapUserDetailsToState(credentials)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <Fragment>\r\n                <MyButton tip=\"Edit Details\" onClick={this.handleOpen} btnClassName={classes.button}>\r\n                    <EditIcon color=\"primary\" />\r\n                </MyButton>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <DialogTitle>Edit your details</DialogTitle>\r\n                    <DialogContent>\r\n                        <form>\r\n                            <TextField\r\n                                name=\"bio\"\r\n                                type=\"text\"\r\n                                label=\"Bio\"\r\n                                multiline\r\n                                rows=\"3\"\r\n                                placeholder=\"A short bio about yourself\"\r\n                                className={classes.textField}\r\n                                value={this.state.bio}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                            />\r\n                            <TextField\r\n                                name=\"website\"\r\n                                type=\"text\"\r\n                                label=\"Website\"\r\n                                placeholder=\"Your personal / professional website\"\r\n                                className={classes.textField}\r\n                                value={this.state.website}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                            />\r\n                            <TextField\r\n                                name=\"location\"\r\n                                type=\"text\"\r\n                                label=\"Location\"\r\n                                placeholder=\"Where you live\"\r\n                                className={classes.textField}\r\n                                value={this.state.location}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.handleSubmit} color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nEditDetails.propTypes = {\r\n    editUserDetails: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    credentials: state.user.credentials\r\n})\r\n\r\nexport default connect(mapStateToProps, { editUserDetails })(withStyles(styles)(EditDetails));\r\n","import React from 'react';\r\nimport NoImg from '../images/no-img.png';\r\nimport PropTypes from 'prop-types';\r\n\r\n//MUI\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n//Icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst styles = theme => ({\r\n    ...theme.otherPages,\r\n    handle: {\r\n        height: 20,\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: 60,\r\n        margin: '0 auto 7px auto',\r\n\r\n    },\r\n    fullLine: {\r\n        height: 15,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n        width: '100%',\r\n        marginBottom: 10\r\n    },\r\n    halfLine: {\r\n        height: 15,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n        width: '50%',\r\n        marginBottom: 10\r\n    }\r\n})\r\n\r\nconst ProfileSkeleton = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.profile}>\r\n                <div className=\"image-wrapper\">\r\n                    <img src={NoImg} alt=\"profile\" className=\"profile-image\" />\r\n                </div>\r\n                <hr />\r\n                <div className=\"profile-details\">\r\n                    <div className={classes.handle} />\r\n                    <hr />\r\n                    <div className={classes.fullLine} />\r\n                    <div className={classes.fullLine} />\r\n                    <hr />\r\n                    <LocationOn color=\"primary\" /><span>Location</span>\r\n                    <hr />\r\n                    <LinkIcon color=\"primary\" />https:webshite.com\r\n                    <hr />\r\n                    <CalendarToday color=\"primary\" /> Joined date\r\n\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nProfileSkeleton.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ProfileSkeleton)","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport EditDetails from './EditDetails';\r\nimport MyButton from '../../util/MyButton';\r\nimport ProfileSkeleton from '../../util/ProfileSkeleton';\r\n\r\n//MUI\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//Icons\r\n\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser, uploadImage } from '../../redux/actions/userActions';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.otherPages\r\n\r\n})\r\n\r\n\r\nclass Profile extends Component {\r\n\r\n    handleImageChange = (e) => {\r\n        const image = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', image, image.name);\r\n        this.props.uploadImage(formData);\r\n\r\n    }\r\n\r\n    handleEditPicture = () => {\r\n        const fileInput = document.getElementById('imageInput');\r\n        fileInput.click();\r\n    }\r\n\r\n    handleLogout = () => {\r\n        this.props.logoutUser()\r\n    }\r\n\r\n    render() {\r\n        const { classes, user: { credentials: { handle, createdAt, imageUrl, bio, website, location }, loading, authenticated } } = this.props;\r\n        //I hate this ternerary operator..\r\n\r\n        //If Authenticated ..\r\n        let profileMarkup = !loading ? (authenticated ? (\r\n            <Paper className={classes.paper}>\r\n                <div className={classes.profile}>\r\n                    <div className=\"image-wrapper\">\r\n                        <img src={imageUrl} alt=\"Profile\" className=\"profile-image\" />\r\n                        <input type=\"file\" id=\"imageInput\" onChange={this.handleImageChange} hidden=\"hidden\" />\r\n                        <MyButton tip=\"Edit profile picture\" onClick={this.handleEditPicture} btnClassName=\"button\">\r\n                            <EditIcon color=\"primary\" />\r\n                        </MyButton>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"profile-details\">\r\n                        <MuiLink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\r\n                            @{handle}\r\n                        </MuiLink>\r\n                        <hr />\r\n                        {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n                        <hr />\r\n                        {location && (\r\n                            <Fragment>\r\n                                <LocationOn color=\"primary\" /> <span>{location}</span>\r\n                                <hr />\r\n                            </Fragment>\r\n                        )}\r\n                        {website && (\r\n                            <Fragment>\r\n                                <LinkIcon color=\"primary\" />\r\n                                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    {' '} {website}\r\n                                </a>\r\n                                <hr />\r\n                            </Fragment>\r\n                        )}\r\n                        <CalendarToday color=\"primary\" /> {' '}\r\n                        <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n                    </div>\r\n                    <MyButton tip=\"Logout\" onClick={this.handleLogout}>\r\n                        <KeyboardReturn color=\"primary\" />\r\n                    </MyButton>\r\n                    <EditDetails />\r\n                </div >\r\n            </Paper >\r\n            //If not Authenticated..\r\n        ) : (\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"body2\" align=\"center\">\r\n                        No profile found, please login again.\r\n                </Typography>\r\n                    <div className={classes.buttons}>\r\n                        <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/login\">\r\n                            Login\r\n                    </Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" component={Link} to=\"/signup\">\r\n                            Signup\r\n                    </Button>\r\n                    </div>\r\n                </Paper>\r\n            )) : (<ProfileSkeleton />)\r\n\r\n        return profileMarkup\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n})\r\n\r\nconst mapActionsToProps = { logoutUser, uploadImage }\r\n\r\nProfile.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    uploadImage: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Profile));\r\n","import React, { Fragment } from 'react';\r\nimport NoImg from '../images/no-img.png';\r\nimport PropTypes from 'prop-types';\r\n\r\n//MUI\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n    ...theme.otherPages,\r\n    card: {\r\n        display: 'flex',\r\n        marginBottom: 20\r\n    },\r\n    cardContent: {\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        padding: 25\r\n    },\r\n    cover: {\r\n        minWidth: 200,\r\n        objectFit: 'cover'\r\n    },\r\n    handle: {\r\n        width: 60,\r\n        height: 18,\r\n        backgroundColor: theme.palette.primary.main,\r\n        marginBottom: 7\r\n    },\r\n    date: {\r\n        height: 14,\r\n        width: 100,\r\n        backgroundColor: 'rgba(0,0,0, 0.3)',\r\n        marginBottom: 10\r\n    },\r\n    fullLine: {\r\n        height: 15,\r\n        width: '90%',\r\n        backgroundColor: 'rgba(0,0,0, 0.6)',\r\n        marginBottom: 10\r\n    },\r\n    halfLine: {\r\n        height: 15,\r\n        width: '50%',\r\n        backgroundColor: 'rgba(0,0,0, 0.6)',\r\n        marginBottom: 10\r\n    }\r\n\r\n})\r\n\r\nconst ChirpSkeleton = (props) => {\r\n    const { classes } = props;\r\n\r\n    const content = Array.from({ length: 5 })\r\n        .map((item, index) => (\r\n            <Card className={classes.card} key={index}>\r\n                <CardMedia className={classes.cover} image={NoImg} />\r\n                <CardContent className={classes.CardContent}>\r\n                    <div className={classes.handle} />\r\n                    <div className={classes.date} />\r\n                    <div className={classes.fullLine} />\r\n                    <div className={classes.fullLine} />\r\n                    <div className={classes.halfLine} />\r\n                </CardContent>\r\n            </Card>\r\n        ))\r\n    return <Fragment>{content}</Fragment>\r\n}\r\n\r\nChirpSkeleton.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ChirpSkeleton);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chirp from '../components/Chirp/Chirp';\r\nimport Profile from '../components/Profile/Profile';\r\nimport ChirpSkeleton from '../util/ChirpSkeleton';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\nimport { getChirps } from '../redux/actions/dataActions'\r\n\r\nclass Home extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getChirps();\r\n    }\r\n\r\n    render() {\r\n        const { chirps, loading } = this.props.data;\r\n\r\n        let recentChirpsMarkup = !loading ? (\r\n            chirps.map(chirp => <Chirp key={chirp.chirpId} chirp={chirp} />)\r\n        ) : (\r\n                <ChirpSkeleton />\r\n            )\r\n        return (\r\n            <Grid container spacing={2}>\r\n                <Grid item sm={4} xs={12}>\r\n                    <Profile />\r\n                </Grid>\r\n                <Grid item sm={8} xs={12}>\r\n                    {recentChirpsMarkup}\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        )\r\n    }\r\n}\r\nHome.propTypes = {\r\n    getChirps: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, { getChirps })(Home)\r\n","import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/bird.svg';\r\nimport { Link } from 'react-router-dom';\r\n//MUI\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//Redux \r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../redux/actions/userActions';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.otherPages\r\n});\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errors: {}\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({\r\n                errors: nextProps.UI.errors\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        this.props.loginUser(userData, this.props.history);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes, UI: { loading } } = this.props;\r\n        const { errors } = this.state\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm />\r\n                <Grid item sm>\r\n                    <img src={AppIcon} alt='chirpy icon' className={classes.image} />\r\n                    <Typography variant='h2' className={classes.pageTitle}>\r\n                        Login\r\n                </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            label=\"Email\"\r\n                            className={classes.textField}\r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            className={classes.textField}\r\n                            helperText={errors.password}\r\n                            error={errors.password ? true : false}\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            disabled={loading}\r\n                        >\r\n                            Login\r\n                             {loading && (\r\n                                <CircularProgress className={classes.progress} size={30} />\r\n                            )}\r\n                        </Button>\r\n                        <br />\r\n                        <small>Dont have an account? Sign up <Link to='/signup'>here</Link></small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm />\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nLogin.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    loginUser: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    loginUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Login))\r\n","import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/bird.svg';\r\nimport { Link } from 'react-router-dom';\r\n//MUI\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { signupUser } from '../redux/actions/userActions';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.otherPages\r\n})\r\n\r\n\r\n\r\nclass Signup extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            handle: '',\r\n            errors: {}\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({\r\n                errors: nextProps.UI.errors\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        const newUserData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.handle\r\n        }\r\n        this.props.signupUser(newUserData, this.props.history)\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes, UI: { loading } } = this.props;\r\n        const { errors } = this.state\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm />\r\n                <Grid item sm>\r\n                    <img src={AppIcon} alt='chirpy icon' className={classes.image} />\r\n                    <Typography variant='h2' className={classes.pageTitle}>\r\n                        Sign Up\r\n                </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            label=\"Email\"\r\n                            className={classes.textField}\r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            className={classes.textField}\r\n                            helperText={errors.password}\r\n                            error={errors.password ? true : false}\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"confirmPassword\"\r\n                            name=\"confirmPassword\"\r\n                            type=\"password\"\r\n                            label=\"Confirm Password\"\r\n                            className={classes.textField}\r\n                            helperText={errors.confirmPassword}\r\n                            error={errors.confirmPassword ? true : false}\r\n                            value={this.state.confirmPassword}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"handle\"\r\n                            name=\"handle\"\r\n                            type=\"text\"\r\n                            label=\"Handle\"\r\n                            className={classes.textField}\r\n                            helperText={errors.handle}\r\n                            error={errors.handle ? true : false}\r\n                            value={this.state.handle}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            disabled={loading}\r\n                        >\r\n                            Sign Up\r\n                             {loading && (\r\n                                <CircularProgress className={classes.progress} size={30} />\r\n                            )}\r\n                        </Button>\r\n                        <br />\r\n                        <small>Already have an account? Log in <Link to='/login'>here</Link></small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm />\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nSignup.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    signupUser: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, { signupUser })(withStyles(styles)(Signup));\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport dayjs from 'dayjs';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//MUI\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//Icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.otherPages,\r\n    '& a': {\r\n        color: theme.palette.primary.main\r\n    }\r\n})\r\n\r\nconst StaticProfile = (props) => {\r\n    const { classes, profile: { handle, createdAt, imageUrl, bio, website, location } } = props;\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.profile}>\r\n                <div className=\"image-wrapper\">\r\n                    <img src={imageUrl} alt=\"Profile\" className=\"profile-image\" />\r\n                </div>\r\n                <hr />\r\n                <div className=\"profile-details\">\r\n                    <MuiLink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\r\n                        @{handle}\r\n                    </MuiLink>\r\n                    <hr />\r\n                    {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n                    <hr />\r\n                    {location && (\r\n                        <Fragment>\r\n                            <LocationOn color=\"primary\" /> <span>{location}</span>\r\n                            <hr />\r\n                        </Fragment>\r\n                    )}\r\n                    {website && (\r\n                        <Fragment>\r\n                            <LinkIcon color=\"primary\" />\r\n                            <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                {' '} {website}\r\n                            </a>\r\n                            <hr />\r\n                        </Fragment>\r\n                    )}\r\n                    <CalendarToday color=\"primary\" /> {' '}\r\n                    <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n                </div>\r\n            </div >\r\n        </Paper >\r\n    )\r\n}\r\n\r\nStaticProfile.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(StaticProfile);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport Chirp from '../components/Chirp/Chirp';\r\nimport ChirpSkeleton from '../util/ChirpSkeleton';\r\nimport ProfileSkeleton from '../util/ProfileSkeleton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StaticProfile from '../components/Profile/StaticProfile';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { getUserData } from '../redux/actions/dataActions';\r\n\r\nclass User extends Component {\r\n    state = {\r\n        profile: null,\r\n        chirpIdParam: null\r\n    }\r\n    componentDidMount() {\r\n        const handle = this.props.match.params.handle;\r\n        const chirpId = this.props.match.params.chirpId;\r\n        if (chirpId) {\r\n            this.setState({\r\n                chirpIdParam: chirpId\r\n            })\r\n        }\r\n\r\n        this.props.getUserData(handle);\r\n        axios\r\n            .get(`/user/${handle}`)\r\n            .then((res) => {\r\n                this.setState({\r\n\r\n                    profile: res.data.user\r\n                });\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        const { chirps, loading } = this.props.data;\r\n        const { chirpIdParam } = this.state;\r\n\r\n        const chirpsMarkup = loading ? (\r\n            <ChirpSkeleton />\r\n        ) : chirps === null ? (\r\n            <p>No chirps from this user.</p>\r\n        ) : !chirpIdParam ? (\r\n            chirps.map(chirp => <Chirp key={chirp.chirpId} chirp={chirp} />)\r\n        ) : (\r\n                        chirps.map(chirp => {\r\n                            if (chirp.chirpId !== chirpIdParam) {\r\n                                return <Chirp key={chirp.chirpId} chirp={chirp} />\r\n                            } else {\r\n                                return <Chirp key={chirp.chirpId} chirp={chirp} openDialog />\r\n                            }\r\n                        })\r\n                    )\r\n\r\n        return (\r\n            <Grid container spacing={2}>\r\n                <Grid item sm={8} xs={12}>\r\n                    {chirpsMarkup}\r\n                </Grid>\r\n                <Grid item sm={4} xs={12}>\r\n                    {this.state.profile === null ? (\r\n                        <ProfileSkeleton />\r\n                    ) : (<StaticProfile profile={this.state.profile} />)}\r\n                </Grid>\r\n            </Grid>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nUser.propTypes = {\r\n    getUserData: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, { getUserData })(User)\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport themeFile from './util/theme';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n\n\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED } from './redux/types';\nimport { logoutUser, getUserData } from './redux/actions/userActions';\n\n//Components\nimport Navbar from './components/Layout/Navbar';\nimport AuthRoute from './util/AuthRoute';\n\n//Pages\nimport Home from './pages/home';\nimport Login from './pages/login';\nimport Signup from './pages/signup';\nimport User from './pages/user';\n\nconst theme = createMuiTheme(themeFile);\n\naxios.defaults.baseURL = 'https://europe-west2-chirpy-1dcff.cloudfunctions.net/api'\n\nconst token = localStorage.FBIdToken;\n\nif (token) {\n  const decodedToken = jwtDecode(token);\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutUser())\n    window.location.href = '/login'\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <Navbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <AuthRoute exact path='/login' component={Login} />\n                <AuthRoute exact path='/signup' component={Signup} />\n                <Route exact path='/users/:handle' component={User} />\n                <Route exact path='/users/:handle/chirp/:chirpId' component={User} />\n              </Switch>\n            </div>\n          </Router>\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","\r\n\r\nexport default {\r\n    palette: {\r\n        primary: {\r\n            light: '#33c9dc',\r\n            main: '#00bcd4',\r\n            dark: '#008394',\r\n            contrastText: '#fff'\r\n        },\r\n        secondary: {\r\n            light: '#ff6333',\r\n            main: '#ff3d00',\r\n            dark: '#b22a00',\r\n            contrastText: '#fff'\r\n        }\r\n    },\r\n\r\n    otherPages: {\r\n        form: {\r\n            textAlign: 'center'\r\n        },\r\n        image: {\r\n            margin: '20px auto 20px auto',\r\n            width: '70px'\r\n        },\r\n        pageTitle: {\r\n            margin: '10px auto 10px auto',\r\n        },\r\n        textField: {\r\n            margin: '10px auto 10px auto'\r\n        },\r\n        button: {\r\n            marginTop: 20,\r\n            position: 'relative',\r\n        },\r\n        customError: {\r\n            color: 'red',\r\n            fontSize: '0.8rem',\r\n            marginTop: 10\r\n        },\r\n        progress: {\r\n            position: 'absolute'\r\n        },\r\n        typography: {\r\n            useNextVariants: true\r\n        },\r\n        submitButton: {\r\n            position: 'relative',\r\n            float: 'right',\r\n            marginTop: 10\r\n        },\r\n        progressSpinner: {\r\n            position: 'absolute'\r\n        },\r\n        closeButton: {\r\n            position: 'absolute',\r\n            left: '84%',\r\n            top: '6%',\r\n        },\r\n        paper: {\r\n            padding: 20\r\n        },\r\n        profile: {\r\n            '& .image-wrapper': {\r\n                textAlign: 'center',\r\n                position: 'relative',\r\n                '& button': {\r\n                    position: 'absolute',\r\n                    top: '80%',\r\n                    left: '70%'\r\n                }\r\n            },\r\n            '& .profile-image': {\r\n                width: 200,\r\n                height: 200,\r\n                objectFit: 'cover',\r\n                maxWidth: '100%',\r\n                borderRadius: '50%'\r\n            },\r\n            '& .profile-details': {\r\n                textAlign: 'center',\r\n                '& span, svg': {\r\n                    verticalAlign: 'middle'\r\n                },\r\n\r\n            },\r\n            '& hr': {\r\n                border: 'none',\r\n                margin: '0 0 10px 0'\r\n            },\r\n            '& svg.button': {\r\n                '&:hover': {\r\n                    cursor: 'pointer'\r\n                }\r\n            },\r\n            '& a': {\r\n                color: '#00bcd4'\r\n            }\r\n\r\n        },\r\n        buttons: {\r\n            textAlign: 'center',\r\n            '& a': {\r\n                margin: '20px 10px'\r\n            }\r\n        },\r\n        invisibleSeparator: {\r\n            border: 'none',\r\n            margin: 4\r\n        },\r\n        profileImage: {\r\n            maxWidth: 200,\r\n            height: 200,\r\n            borderRadius: '50%',\r\n            objectFit: 'cover'\r\n        },\r\n        dialogContent: {\r\n            padding: 20\r\n        },\r\n\r\n        expandButton: {\r\n            //   position: 'absolute',\r\n            // left: '90%'\r\n        },\r\n        spinnerDiv: {\r\n            textAlign: 'center',\r\n            marginTop: 50,\r\n            marginBottom: 50\r\n        },\r\n        visibleSeparator: {\r\n            width: '100%',\r\n            borderBottom: '1px solid rgba(0, 0, 0, 0.1)',\r\n            marginBottom: 20\r\n        },\r\n\r\n\r\n    }\r\n\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/no-img.b6681619.png\";","module.exports = __webpack_public_path__ + \"static/media/bird.8697c718.svg\";"],"sourceRoot":""}